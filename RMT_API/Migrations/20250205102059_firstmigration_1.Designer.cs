// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMT_API.Data;

#nullable disable

namespace RMT_API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250205102059_firstmigration_1")]
    partial class firstmigration_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RMT_API.Models.AcademicDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ResourceInformationID")
                        .HasColumnType("int");

                    b.Property<decimal>("ResultPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ResourceInformationID");

                    b.ToTable("AcademicDetails");
                });

            modelBuilder.Entity("RMT_API.Models.AccessTypeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("AccessTypeMaster");
                });

            modelBuilder.Entity("RMT_API.Models.BGVDocuments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("DocumentsID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("DocumentsID");

                    b.ToTable("BGVDocuments");
                });

            modelBuilder.Entity("RMT_API.Models.CertificationDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ResourceInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ResourceInformationID");

                    b.ToTable("CertificationDetails");
                });

            modelBuilder.Entity("RMT_API.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("PincodeID")
                        .HasColumnType("int");

                    b.Property<int>("RegionID")
                        .HasColumnType("int");

                    b.Property<int?>("ReportingManagerID")
                        .HasColumnType("int");

                    b.Property<int?>("SPOCID")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ReportingManagerID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RMT_API.Models.ContactInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("ContactTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SupplierID");

                    b.ToTable("ContactInformation");
                });

            modelBuilder.Entity("RMT_API.Models.ContactTypeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ContactTypeMaster");
                });

            modelBuilder.Entity("RMT_API.Models.DeliveryMotionMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("DeliveryMotionMaster");
                });

            modelBuilder.Entity("RMT_API.Models.DepartmentMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("RMT_API.Models.Documents", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ResourceInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ResourceInformationID")
                        .IsUnique();

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("RMT_API.Models.DomainLevelMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("DomainLevelMaster");
                });

            modelBuilder.Entity("RMT_API.Models.DomainMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("DomainMaster");
                });

            modelBuilder.Entity("RMT_API.Models.DomainRoleMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("DomainRoleMaster");
                });

            modelBuilder.Entity("RMT_API.Models.FormAccess", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AccessTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FormAccess");
                });

            modelBuilder.Entity("RMT_API.Models.FormMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FormMaster");
                });

            modelBuilder.Entity("RMT_API.Models.JoiningDocuments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AadharCard")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("AppraisalLetter")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentsID")
                        .HasColumnType("int");

                    b.Property<string>("DrivingLicense")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JoiningLetter")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OfferLetter")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PanCard")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("DocumentsID")
                        .IsUnique()
                        .HasFilter("[DocumentsID] IS NOT NULL");

                    b.ToTable("JoiningDocuments");
                });

            modelBuilder.Entity("RMT_API.Models.LaptopProviderMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("LaptopProviderMaster");
                });

            modelBuilder.Entity("RMT_API.Models.Leave", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ApproverID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LeaveTypeID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("RMT_API.Models.LeaveTypeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("LeaveTypeMaster");
                });

            modelBuilder.Entity("RMT_API.Models.LocationMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("LocationMaster");
                });

            modelBuilder.Entity("RMT_API.Models.Manager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("ManagerTypeID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ParentManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ParentManagerId");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("RMT_API.Models.ManagerTypeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ManagerTypeMaster");
                });

            modelBuilder.Entity("RMT_API.Models.PersonalDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AlternateContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmergencyContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FathersName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HometownAddress")
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MothersName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OfficialMailingAddress")
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("PinCodeID")
                        .HasColumnType("int");

                    b.Property<int>("ResourceInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ResourceInformationID")
                        .IsUnique();

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("RMT_API.Models.PincodeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("PincodeMaster");
                });

            modelBuilder.Entity("RMT_API.Models.ProfessionalDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("AssetAssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssetModelNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AssetSerialNo")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("AttendanceRequired")
                        .HasColumnType("bit");

                    b.Property<string>("CWFID")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DomainID")
                        .HasColumnType("int");

                    b.Property<int?>("DomainLevelID")
                        .HasColumnType("int");

                    b.Property<int?>("DomainRoleID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JoiningLocationID")
                        .HasColumnType("int");

                    b.Property<int?>("LaptopProviderID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastWorkingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficialEmailID")
                        .HasColumnType("varchar(60)");

                    b.Property<int>("OverallExperience")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONo")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ResourceInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ResourceInformationID")
                        .IsUnique();

                    b.ToTable("ProfessionalDetails");
                });

            modelBuilder.Entity("RMT_API.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleiveryMotionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PMID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("CONCAT('R', RIGHT('10000' + CAST(ID AS VARCHAR), 5))", true);

                    b.Property<int?>("RMID")
                        .HasColumnType("int");

                    b.Property<int?>("SegmentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupportTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("DeleiveryMotionID");

                    b.HasIndex("PMID");

                    b.HasIndex("RMID");

                    b.HasIndex("SegmentID");

                    b.HasIndex("SupportTypeID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("RMT_API.Models.PublicHolidayMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("PHDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PHYear")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("PublicHolidaysMaster");
                });

            modelBuilder.Entity("RMT_API.Models.RegionMater", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("RegionMaster");
                });

            modelBuilder.Entity("RMT_API.Models.ReportingManager", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectManagerID")
                        .HasColumnType("int");

                    b.Property<string>("RMContactNumber")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RMEmailID")
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ProjectManagerID");

                    b.ToTable("ReportingManager");
                });

            modelBuilder.Entity("RMT_API.Models.Resource", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailID")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("PMID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("RMID")
                        .HasColumnType("int");

                    b.Property<string>("ResourceCode")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("CONCAT('R', RIGHT('10000' + CAST(ID AS VARCHAR), 5))", true);

                    b.Property<int?>("ResourceInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ResourceInformationID")
                        .IsUnique()
                        .HasFilter("[ResourceInformationID] IS NOT NULL");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceDeployment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("AllocationPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ResourceDeployments");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ResourceInformation");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceLifecycle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HandledByID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LifecycleType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ResourceLifecycles");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceOffboarding", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitDocumentName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ExitReason")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("HandledByID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("OffboardingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ResourceOffboardings");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceOnboarding", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("HandledByID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("OnboardingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ResourceOnboardings");
                });

            modelBuilder.Entity("RMT_API.Models.SPOC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SPOCContactNumber")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SPOCEmailID")
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("SPOC");
                });

            modelBuilder.Entity("RMT_API.Models.SegmentMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("SegmentMaster");
                });

            modelBuilder.Entity("RMT_API.Models.StateMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("StateMaster");
                });

            modelBuilder.Entity("RMT_API.Models.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GST")
                        .HasColumnType("varchar(60)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PAN")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("SIDDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.Property<string>("Supplier_Code")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("CONCAT('S', RIGHT('10000' + CAST(ID AS VARCHAR), 5))", true);

                    b.Property<string>("TAN")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("RMT_API.Models.SupportTypeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("SupportTypeMaster");
                });

            modelBuilder.Entity("RMT_API.Models.Timesheet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoursWorked")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("RMT_API.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AccessTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AccessTypeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RMT_API.Models.AcademicDetails", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", "ResourceInformation")
                        .WithMany("AcademicDetails")
                        .HasForeignKey("ResourceInformationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceInformation");
                });

            modelBuilder.Entity("RMT_API.Models.BGVDocuments", b =>
                {
                    b.HasOne("RMT_API.Models.Documents", "Documents")
                        .WithMany("BGV")
                        .HasForeignKey("DocumentsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Documents");
                });

            modelBuilder.Entity("RMT_API.Models.CertificationDetails", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", "ResourceInformation")
                        .WithMany("Certifications")
                        .HasForeignKey("ResourceInformationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceInformation");
                });

            modelBuilder.Entity("RMT_API.Models.Client", b =>
                {
                    b.HasOne("RMT_API.Models.ReportingManager", null)
                        .WithMany("Clients")
                        .HasForeignKey("ReportingManagerID");
                });

            modelBuilder.Entity("RMT_API.Models.ContactInformation", b =>
                {
                    b.HasOne("RMT_API.Models.Supplier", null)
                        .WithMany("ContactInformation")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RMT_API.Models.Documents", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", "ResourceInformation")
                        .WithOne("Documents")
                        .HasForeignKey("RMT_API.Models.Documents", "ResourceInformationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceInformation");
                });

            modelBuilder.Entity("RMT_API.Models.JoiningDocuments", b =>
                {
                    b.HasOne("RMT_API.Models.Documents", "Documents")
                        .WithOne("Joining")
                        .HasForeignKey("RMT_API.Models.JoiningDocuments", "DocumentsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Documents");
                });

            modelBuilder.Entity("RMT_API.Models.Manager", b =>
                {
                    b.HasOne("RMT_API.Models.Manager", "ParentManager")
                        .WithMany()
                        .HasForeignKey("ParentManagerId");

                    b.Navigation("ParentManager");
                });

            modelBuilder.Entity("RMT_API.Models.PersonalDetails", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", "ResourceInformation")
                        .WithOne("Personal")
                        .HasForeignKey("RMT_API.Models.PersonalDetails", "ResourceInformationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceInformation");
                });

            modelBuilder.Entity("RMT_API.Models.ProfessionalDetails", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", "ResourceInformation")
                        .WithOne("Professional")
                        .HasForeignKey("RMT_API.Models.ProfessionalDetails", "ResourceInformationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceInformation");
                });

            modelBuilder.Entity("RMT_API.Models.Project", b =>
                {
                    b.HasOne("RMT_API.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID");

                    b.HasOne("RMT_API.Models.DeliveryMotionMaster", "DeleiveryMotion")
                        .WithMany()
                        .HasForeignKey("DeleiveryMotionID");

                    b.HasOne("RMT_API.Models.Manager", "PM")
                        .WithMany()
                        .HasForeignKey("PMID");

                    b.HasOne("RMT_API.Models.ReportingManager", "RM")
                        .WithMany("Projects")
                        .HasForeignKey("RMID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RMT_API.Models.SegmentMaster", "Segment")
                        .WithMany()
                        .HasForeignKey("SegmentID");

                    b.HasOne("RMT_API.Models.SupportTypeMaster", "SupportType")
                        .WithMany()
                        .HasForeignKey("SupportTypeID");

                    b.Navigation("Client");

                    b.Navigation("DeleiveryMotion");

                    b.Navigation("PM");

                    b.Navigation("RM");

                    b.Navigation("Segment");

                    b.Navigation("SupportType");
                });

            modelBuilder.Entity("RMT_API.Models.ReportingManager", b =>
                {
                    b.HasOne("RMT_API.Models.Manager", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerID");

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("RMT_API.Models.Users", b =>
                {
                    b.HasOne("RMT_API.Models.AccessTypeMaster", "AccessType")
                        .WithMany()
                        .HasForeignKey("AccessTypeID");

                    b.Navigation("AccessType");
                });

            modelBuilder.Entity("RMT_API.Models.Documents", b =>
                {
                    b.Navigation("BGV");

                    b.Navigation("Joining");
                });

            modelBuilder.Entity("RMT_API.Models.ReportingManager", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceInformation", b =>
                {
                    b.Navigation("AcademicDetails");

                    b.Navigation("Certifications");

                    b.Navigation("Documents");

                    b.Navigation("Personal");

                    b.Navigation("Professional");
                });

            modelBuilder.Entity("RMT_API.Models.Supplier", b =>
                {
                    b.Navigation("ContactInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
