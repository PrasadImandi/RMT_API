// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMT_API.Data;

#nullable disable

namespace RMT_API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250128114250_AddNewChanges")]
    partial class AddNewChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RMT_API.Models.AcademicDetails", b =>
                {
                    b.Property<int>("AcademicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicID"));

                    b.Property<string>("AcademicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceInformationId")
                        .HasColumnType("int");

                    b.Property<decimal>("ResultPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("YearOfCompleted")
                        .HasColumnType("int");

                    b.HasKey("AcademicID");

                    b.HasIndex("ResourceInformationId");

                    b.ToTable("AcademicDetails");
                });

            modelBuilder.Entity("RMT_API.Models.AccessTypeMaster", b =>
                {
                    b.Property<int>("AccessTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessTypeID"));

                    b.Property<string>("AccessTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("AccessTypeID");

                    b.ToTable("AccessTypeMaster");
                });

            modelBuilder.Entity("RMT_API.Models.BGVDocuments", b =>
                {
                    b.Property<int>("BGVDocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BGVDocumentID"));

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BGVDocumentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BGVDocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentsId")
                        .HasColumnType("int");

                    b.HasKey("BGVDocumentID");

                    b.HasIndex("DocumentsId");

                    b.ToTable("BGVDocuments");
                });

            modelBuilder.Entity("RMT_API.Models.CertificationDetails", b =>
                {
                    b.Property<int>("CertificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificationID"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceInformationId")
                        .HasColumnType("int");

                    b.Property<int>("YearOfCompleted")
                        .HasColumnType("int");

                    b.HasKey("CertificationID");

                    b.HasIndex("ResourceInformationId");

                    b.ToTable("CertificationDetails");
                });

            modelBuilder.Entity("RMT_API.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("LogoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PincodeID")
                        .HasColumnType("int");

                    b.Property<int>("RegionID")
                        .HasColumnType("int");

                    b.Property<int?>("SPOCID")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RMT_API.Models.ContactInformation", b =>
                {
                    b.Property<int>("ContactInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactInformationID"));

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ContactInformationID");

                    b.ToTable("ContactInformation");
                });

            modelBuilder.Entity("RMT_API.Models.ContactType", b =>
                {
                    b.Property<int>("ContactTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactTypeID"));

                    b.Property<string>("ContactTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ContactTypeID");

                    b.ToTable("ContactType");
                });

            modelBuilder.Entity("RMT_API.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("RMT_API.Models.Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResourceInformationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceInformationId")
                        .IsUnique();

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("RMT_API.Models.Domain", b =>
                {
                    b.Property<int>("DomainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DomainID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomainName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("DomainID");

                    b.ToTable("Domain");
                });

            modelBuilder.Entity("RMT_API.Models.Form", b =>
                {
                    b.Property<int>("FormID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("FormID");

                    b.ToTable("Form");
                });

            modelBuilder.Entity("RMT_API.Models.FormAccess", b =>
                {
                    b.Property<int>("AccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessID"));

                    b.Property<int>("AccessTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("AccessID");

                    b.ToTable("FormAccess");
                });

            modelBuilder.Entity("RMT_API.Models.JoiningDocuments", b =>
                {
                    b.Property<int>("JoiningDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JoiningDocumentId"));

                    b.Property<string>("AadharCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentsId")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("appraisalLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("drivingLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("joiningLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offerLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("panCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JoiningDocumentId");

                    b.HasIndex("DocumentsId");

                    b.ToTable("JoiningDocuments");
                });

            modelBuilder.Entity("RMT_API.Models.Leave", b =>
                {
                    b.Property<int>("LeaveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveID"));

                    b.Property<int>("ApproverID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeaveType")
                        .HasColumnType("int");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaveID");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("RMT_API.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("LocationID");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("RMT_API.Models.Manager", b =>
                {
                    b.Property<int>("ManagerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerID"));

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectManagerID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ManagerID");

                    b.HasIndex("ProjectManagerID");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("RMT_API.Models.PersonalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlternateContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmergencyContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HometownAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MothersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialMailingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceInformationId")
                        .HasColumnType("int");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceInformationId")
                        .IsUnique();

                    b.HasIndex("StateID");

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("RMT_API.Models.Pincode", b =>
                {
                    b.Property<int>("PincodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PincodeID"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("PincodeID");

                    b.ToTable("Pincode");
                });

            modelBuilder.Entity("RMT_API.Models.ProfessionalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AssetAssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssetModelNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetSerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AttendanceRequired")
                        .HasColumnType("bit");

                    b.Property<string>("CWFID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomainID")
                        .HasColumnType("int");

                    b.Property<int?>("Laptop")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastWorkingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LevelID")
                        .HasColumnType("int");

                    b.Property<string>("OfficialEmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OverallExperience")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceInformationId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceInformationId")
                        .IsUnique();

                    b.ToTable("ProfessionalDetails");
                });

            modelBuilder.Entity("RMT_API.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectID"));

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("RMT_API.Models.PublicHoliday", b =>
                {
                    b.Property<int>("PHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PHID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PHDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PHDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PHName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PHYear")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("PHID");

                    b.ToTable("PublicHolidays");
                });

            modelBuilder.Entity("RMT_API.Models.Region", b =>
                {
                    b.Property<int>("RegionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionID"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("RegionID");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("RMT_API.Models.ReportingManager", b =>
                {
                    b.Property<int>("ReportingManagerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportingManagerID"));

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectManagerID")
                        .HasColumnType("int");

                    b.Property<string>("RMContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RMEmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RMName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportingManagerID");

                    b.HasIndex("ClientID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("ProjectManagerID");

                    b.ToTable("ReportingManager");
                });

            modelBuilder.Entity("RMT_API.Models.Resource", b =>
                {
                    b.Property<int>("ResourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceID"));

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PMID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("RMID")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ResourceID");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceDeployment", b =>
                {
                    b.Property<int>("DeploymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeploymentID"));

                    b.Property<decimal>("AllocationPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("DeploymentID");

                    b.ToTable("ResourceDeployments");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceInformation", b =>
                {
                    b.Property<int>("ResourceInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ResourceInformationID");

                    b.ToTable("ResourceInformation");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceOffboarding", b =>
                {
                    b.Property<int>("OffboardingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OffboardingID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitDocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HandledByID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OffboardingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("OffboardingID");

                    b.ToTable("ResourceOffboardings");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceOnboarding", b =>
                {
                    b.Property<int>("OnboardingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OnboardingID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HandledByID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnboardingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("OnboardingID");

                    b.ToTable("ResourceOnboardings");
                });

            modelBuilder.Entity("RMT_API.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RMT_API.Models.SPOC", b =>
                {
                    b.Property<int>("SPOCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SPOCID"));

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("SPOCContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPOCEmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPOCName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("SPOCID");

                    b.ToTable("SPOC");
                });

            modelBuilder.Entity("RMT_API.Models.State", b =>
                {
                    b.Property<int>("StateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateID"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("StateID");

                    b.ToTable("State");
                });

            modelBuilder.Entity("RMT_API.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactInfoID")
                        .HasColumnType("int");

                    b.Property<int?>("ContactInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GST")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SIDDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("SupplierID");

                    b.HasIndex("ContactInformationID");

                    b.HasIndex("StateID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("RMT_API.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimesheetID"));

                    b.Property<int>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HoursWorked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("TimesheetID");

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("RMT_API.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int?>("AccessTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Created_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("Updated_By")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RMT_API.Models.AcademicDetails", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", null)
                        .WithMany("Academic")
                        .HasForeignKey("ResourceInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RMT_API.Models.BGVDocuments", b =>
                {
                    b.HasOne("RMT_API.Models.Documents", null)
                        .WithMany("BGV")
                        .HasForeignKey("DocumentsId");
                });

            modelBuilder.Entity("RMT_API.Models.CertificationDetails", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", null)
                        .WithMany("Certification")
                        .HasForeignKey("ResourceInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RMT_API.Models.Documents", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", null)
                        .WithOne("Documents")
                        .HasForeignKey("RMT_API.Models.Documents", "ResourceInformationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RMT_API.Models.JoiningDocuments", b =>
                {
                    b.HasOne("RMT_API.Models.Documents", null)
                        .WithMany("Joining")
                        .HasForeignKey("DocumentsId");
                });

            modelBuilder.Entity("RMT_API.Models.Manager", b =>
                {
                    b.HasOne("RMT_API.Models.Manager", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerID");

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("RMT_API.Models.PersonalDetails", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", null)
                        .WithOne("Personal")
                        .HasForeignKey("RMT_API.Models.PersonalDetails", "ResourceInformationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RMT_API.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID");

                    b.Navigation("State");
                });

            modelBuilder.Entity("RMT_API.Models.ProfessionalDetails", b =>
                {
                    b.HasOne("RMT_API.Models.ResourceInformation", null)
                        .WithOne("Professional")
                        .HasForeignKey("RMT_API.Models.ProfessionalDetails", "ResourceInformationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RMT_API.Models.ReportingManager", b =>
                {
                    b.HasOne("RMT_API.Models.Client", "ClientMaster")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMT_API.Models.Project", "ProjectMaster")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMT_API.Models.Manager", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerID");

                    b.Navigation("ClientMaster");

                    b.Navigation("ProjectManager");

                    b.Navigation("ProjectMaster");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceInformation", b =>
                {
                    b.HasOne("RMT_API.Models.Resource", null)
                        .WithOne("ResourceInformation")
                        .HasForeignKey("RMT_API.Models.ResourceInformation", "ResourceInformationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RMT_API.Models.Supplier", b =>
                {
                    b.HasOne("RMT_API.Models.ContactInformation", "ContactInformation")
                        .WithMany()
                        .HasForeignKey("ContactInformationID");

                    b.HasOne("RMT_API.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID");

                    b.Navigation("ContactInformation");

                    b.Navigation("State");
                });

            modelBuilder.Entity("RMT_API.Models.Documents", b =>
                {
                    b.Navigation("BGV");

                    b.Navigation("Joining");
                });

            modelBuilder.Entity("RMT_API.Models.Resource", b =>
                {
                    b.Navigation("ResourceInformation");
                });

            modelBuilder.Entity("RMT_API.Models.ResourceInformation", b =>
                {
                    b.Navigation("Academic");

                    b.Navigation("Certification");

                    b.Navigation("Documents")
                        .IsRequired();

                    b.Navigation("Personal");

                    b.Navigation("Professional");
                });
#pragma warning restore 612, 618
        }
    }
}
